CREATE SEQUENCE FAILED_JOBS_ID_SEQ START WITH 1 INCREMENT BY 1 MAXVALUE 10000 CYCLE ORDER;
CREATE OR REPLACE TRIGGER FAILED_JOBS_ID_TRG
            BEFORE INSERT ON FAILED_JOBS
            FOR EACH ROW
                BEGIN
            IF :NEW.ID IS NULL THEN
                SELECT FAILED_JOBS_ID_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
            END IF;
END;
/

CREATE SEQUENCE  MIGRATIONS_ID_SEQ START WITH 1 INCREMENT BY 1 MAXVALUE 10000 CYCLE ORDER;
CREATE OR REPLACE TRIGGER MIGRATIONS_ID_TRG
            BEFORE INSERT ON MIGRATIONS
            FOR EACH ROW
                BEGIN
            IF :NEW.ID IS NULL THEN
                SELECT MIGRATIONS_ID_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
            END IF;
END;
/

CREATE SEQUENCE PERSONAL_ACCESS_TOKENS_ID_SEQ START WITH 1 INCREMENT BY 1 MAXVALUE 10000 CYCLE ORDER;
CREATE OR REPLACE TRIGGER PERSONAL_ACCESS_TOKENS_ID_TRG
            BEFORE INSERT ON PERSONAL_ACCESS_TOKENS
            FOR EACH ROW
                BEGIN
            IF :NEW.ID IS NULL THEN
                SELECT PERSONAL_ACCESS_TOKENS_ID_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
            END IF;
END;
/

CREATE SEQUENCE USERS_ID_SEQ START WITH 1 INCREMENT BY 1 MAXVALUE 10000 CYCLE ORDER;
CREATE OR REPLACE TRIGGER USERS_ID_TRG
            BEFORE INSERT ON USERS
            FOR EACH ROW
                BEGIN
            IF :NEW.ID IS NULL THEN
                SELECT USERS_ID_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
            END IF;
END;
/

CREATE SEQUENCE SEQ_PROVEEDOR START WITH 1 INCREMENT BY 1 MAXVALUE 10000 CYCLE ORDER;
CREATE OR REPLACE TRIGGER TRIG_SEQ_PROVEEDOR
BEFORE INSERT ON PROVEEDOR FOR EACH ROW
WHEN(NEW.ID_PROVEEDOR IS NULL)
BEGIN
:NEW.ID_PROVEEDOR := SEQ_PROVEEDOR.NEXTVAL;
END;
/

CREATE SEQUENCE SEQ_CLIENTE START WITH 1 INCREMENT BY 1 MAXVALUE 10000 CYCLE ORDER;
CREATE OR REPLACE TRIGGER TRIG_SEQ_CLIENTE
BEFORE INSERT ON CLIENTE FOR EACH ROW
WHEN(NEW.ID_CLIENTE IS NULL)
BEGIN
:NEW.ID_CLIENTE := SEQ_CLIENTE.NEXTVAL;
END;
/

CREATE SEQUENCE SEQ_FACT_COMPRA START WITH 1 INCREMENT BY 1 MAXVALUE 10000 CYCLE ORDER;
CREATE OR REPLACE TRIGGER TRIG_SEQ_FACT_COMPRA
BEFORE INSERT ON FACTURA_COMPRA FOR EACH ROW
WHEN(NEW.ID_COMPRA IS NULL)
BEGIN
:NEW.ID_COMPRA := SEQ_FACT_COMPRA.NEXTVAL;
END;
/

CREATE SEQUENCE SEQ_FACT_VENTA START WITH 1 INCREMENT BY 1 MAXVALUE 10000 CYCLE ORDER;
CREATE OR REPLACE TRIGGER TRIG_SEQ_FACT_VENTA
BEFORE INSERT ON FACTURA_VENTA FOR EACH ROW
WHEN(NEW.ID_VENTA IS NULL)
BEGIN
:NEW.ID_VENTA := SEQ_FACT_VENTA.NEXTVAL;
END;
/

CREATE SEQUENCE SEQ_DET_COMPRA START WITH 1 INCREMENT BY 1 MAXVALUE 10000 CYCLE ORDER;
CREATE OR REPLACE TRIGGER TRIG_SEQ_DET_COMPRA
BEFORE INSERT ON DETALLE_COMPRA FOR EACH ROW
WHEN(NEW.ID_DET_COMPRA IS NULL)
BEGIN
:NEW.ID_DET_COMPRA := SEQ_DET_COMPRA.NEXTVAL;
END;
/

CREATE SEQUENCE SEQ_DET_VENTA START WITH 1 INCREMENT BY 1 MAXVALUE 10000 CYCLE ORDER;
CREATE OR REPLACE TRIGGER TRIG_SEQ_DET_VENTA
BEFORE INSERT ON DETALLE_VENTA FOR EACH ROW
WHEN(NEW.ID_DET_VENTA IS NULL)
BEGIN
:NEW.ID_DET_VENTA := SEQ_DET_VENTA.NEXTVAL;
END;
/

CREATE SEQUENCE SEQ_PRODUCTO START WITH 1 INCREMENT BY 1 MAXVALUE 10000 CYCLE ORDER;
CREATE OR REPLACE TRIGGER TRIG_SEQ_PRODUCTO
BEFORE INSERT ON PRODUCTO FOR EACH ROW
WHEN(NEW.ID_PRODUCTO IS NULL)
BEGIN
:NEW.ID_PRODUCTO := SEQ_PRODUCTO.NEXTVAL;
END;
/

CREATE SEQUENCE SEQ_CATEGORIA START WITH 1 INCREMENT BY 1 MAXVALUE 10000 CYCLE ORDER;
CREATE OR REPLACE TRIGGER TRIG_SEQ_CATEGORIA
BEFORE INSERT ON CATEGORIA FOR EACH ROW
WHEN(NEW.ID_CATEGORIA IS NULL)
BEGIN
:NEW.ID_CATEGORIA := SEQ_CATEGORIA.NEXTVAL;
END;
/

CREATE SEQUENCE SEQ_NO_FACTURA START WITH 1 INCREMENT BY 1 MAXVALUE 10000 CYCLE ORDER;
create or replace TRIGGER TRIG_SEQ_NO_FACTURA
BEFORE INSERT ON FACTURA_VENTA FOR EACH ROW
WHEN(NEW.NO_FACTURA IS NULL)
BEGIN
:NEW.NO_FACTURA := SEQ_NO_FACTURA.NEXTVAL;
END;
/

CREATE SEQUENCE SEQ_ID_IMPUESTO_COMPRA START WITH 1 INCREMENT BY 1 MAXVALUE 10000 CYCLE ORDER;
CREATE OR REPLACE TRIGGER TRIG_SEQ_ID_COMPRA
BEFORE INSERT ON IMPUESTO_COMPRA FOR EACH ROW
WHEN(NEW.ID_IMPUESTO_COMPRA IS NULL)
BEGIN
:NEW.ID_IMPUESTO_COMPRA := SEQ_ID_IMPUESTO_COMPRA.NEXTVAL;
END;
/

CREATE SEQUENCE SEQ_ID_IMPUESTO_VENTA START WITH 1 INCREMENT BY 1 MAXVALUE 10000 CYCLE ORDER;
CREATE OR REPLACE TRIGGER TRIG_SEQ_ID_VENTA
BEFORE INSERT ON IMPUESTO_VENTA FOR EACH ROW
WHEN(NEW.ID_IMPUESTO_VENTA IS NULL)
BEGIN
:NEW.ID_IMPUESTO_VENTA := SEQ_ID_IMPUESTO_VENTA.NEXTVAL;
END;
/

CREATE SEQUENCE SEQ_ID_VENTA_ANULADA START WITH 1 INCREMENT BY 1 MAXVALUE 10000 CYCLE ORDER;
CREATE OR REPLACE TRIGGER TRIG_SEQ_ID_VENTA_ANULADA
BEFORE INSERT ON VENTA_ANULADA FOR EACH ROW
WHEN(NEW.ID_VENTA_ANULADA IS NULL)
BEGIN
:NEW.ID_VENTA_ANULADA := SEQ_ID_VENTA_ANULADA.NEXTVAL;
END;
/

CREATE SEQUENCE SEQ_ID_COMPRA_ANULADA START WITH 1 INCREMENT BY 1 MAXVALUE 10000 CYCLE ORDER;
CREATE OR REPLACE TRIGGER TRIG_SEQ_ID_COMPRA_ANULADA
BEFORE INSERT ON COMPRA_ANULADA FOR EACH ROW
WHEN(NEW.ID_COMPRA_ANULADA IS NULL)
BEGIN
:NEW.ID_COMPRA_ANULADA := SEQ_ID_COMPRA_ANULADA.NEXTVAL;
END;
/