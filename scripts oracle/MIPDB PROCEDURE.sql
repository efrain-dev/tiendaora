CREATE OR REPLACE PROCEDURE INDEX_PRODUCTOS(DATA IN VARCHAR)
IS
CURSOR_PRODUCTOS SYS_REFCURSOR;
BEGIN
    OPEN CURSOR_PRODUCTOS FOR SELECT PRODUCTO.*, CATEGORIA.NOMBRE_CATEGORIA AS CATEGORIA FROM PRODUCTO JOIN CATEGORIA ON PRODUCTO.CATEGORIA_ID_CATEGORIA = CATEGORIA.ID_CATEGORIA WHERE 
    UPPER(PRODUCTO.ID_PRODUCTO) LIKE '%' || UPPER(DATA) || '%' OR UPPER(PRODUCTO.NOMBRE_PRODUCTO) LIKE '%' || UPPER(DATA) || '%' OR UPPER(PRODUCTO.DESCRIPCION_PRODUCTO) LIKE '%' || UPPER(DATA) || '%'
    OR UPPER(PRODUCTO.EXISTENCIA) LIKE '%' || UPPER(DATA) || '%' OR UPPER(PRODUCTO.PRECIO_COMPRA) LIKE '%' || UPPER(DATA) || '%' OR UPPER(PRODUCTO.PRECIO_VENTA) LIKE '%' || UPPER(DATA) || '%'
    OR UPPER(PRODUCTO.PRECIO_COMPRA) LIKE'%' || UPPER(DATA) || '%' OR CATEGORIA.NOMBRE_CATEGORIA LIKE '%' || UPPER(DATA) || '%';
    DBMS_SQL.RETURN_RESULT(CURSOR_PRODUCTOS);
END;
/

create or replace procedure mostrar_ventas(desde in varchar2,hasta in varchar2)
IS
CURSOR_VENTAS SYS_REFCURSOR;
BEGIN
OPEN CURSOR_VENTAS FOR
SELECT FC.id_venta, FC.FECHA_VENTA AS fecha, CE.NOMBRE_CLIENTE AS cliente, USERS.NAME AS empleado, FC.NO_FACTURA AS factura,SUM(DETV.TOTAL) AS total
FROM FACTURA_VENTA FC, DETALLE_VENTA DETV, CLIENTE CE, USERS
WHERE (FC.ID_VENTA = DETV.FACTURA_VENTA_ID_VENTA) AND (FC.USERS_ID = USERS.ID) AND (FC.CLIENTE_ID_CLIENTE = CE.ID_CLIENTE) and (fc.fecha_venta between desde and hasta)
GROUP BY FC.FECHA_VENTA, CE.NOMBRE_CLIENTE, USERS.NAME, FC.NO_FACTURA ,FC.id_venta
HAVING(SUM(DETV.TOTAL)>0)
ORDER BY FC.FECHA_VENTA;
    DBMS_SQL.RETURN_RESULT(CURSOR_VENTAS);
END;


CREATE OR REPLACE PROCEDURE MOSTRAR_COMPRAS(DESDE IN VARCHAR2,HASTA IN VARCHAR2)
IS
CURSOR_COMPRAS SYS_REFCURSOR;
BEGIN
OPEN CURSOR_COMPRAS FOR
SELECT FC.id_compra, FC.FECHA_COMPRA AS fecha, CE.NOMBRE_PROVEEDOR AS proveedor, USERS.NAME AS empleado, FC.NO_COMPRA AS factura,SUM(DETV.TOTAL) AS total
FROM FACTURA_COMPRA FC, DETALLE_COMPRA DETV, PROVEEDOR CE, USERS
WHERE (FC.ID_COMPRA= DETV.FACTURA_COMPRAS_ID_COMPRA) AND (FC.USERS_ID = USERS.ID) AND (FC.PROVEEDOR_ID_PROVEEDOR = CE.ID_PROVEEDOR) AND (FC.FECHA_COMPRA BETWEEN DESDE AND HASTA) 
GROUP BY FC.FECHA_COMPRA, CE.NOMBRE_PROVEEDOR, USERS.NAME, FC.NO_COMPRA,FC.id_compra
HAVING(SUM(DETV.TOTAL)>0)

ORDER BY FC.FECHA_COMPRA;
    DBMS_SQL.RETURN_RESULT(CURSOR_COMPRAS);
END;
/

CREATE OR REPLACE PROCEDURE INDEX_VENTAS(DATA IN VARCHAR)
IS
CURSOR_VENTAS SYS_REFCURSOR;
BEGIN
    OPEN CURSOR_VENTAS FOR SELECT CATEGORIA.NOMBRE_CATEGORIA AS CATEGORIA FROM PRODUCTO JOIN CATEGORIA ON PRODUCTO.CATEGORIA_ID_CATEGORIA = CATEGORIA.ID_CATEGORIA WHERE 
    UPPER(PRODUCTO.ID_PRODUCTO) LIKE '%' || UPPER(DATA) || '%' OR UPPER(PRODUCTO.NOMBRE_PRODUCTO) LIKE '%' || UPPER(DATA) || '%' OR UPPER(PRODUCTO.DESCRIPCION_PRODUCTO) LIKE '%' || UPPER(DATA) || '%'
    OR UPPER(PRODUCTO.EXISTENCIA) LIKE '%' || UPPER(DATA) || '%' OR UPPER(PRODUCTO.PRECIO_COMPRA) LIKE '%' || UPPER(DATA) || '%' OR UPPER(PRODUCTO.PRECIO_VENTA) LIKE '%' || UPPER(DATA) || '%'
    OR UPPER(PRODUCTO.PRECIO_COMPRA) LIKE'%' || UPPER(DATA) || '%' OR CATEGORIA.NOMBRE_CATEGORIA LIKE '%' || UPPER(DATA) || '%';
    DBMS_SQL.RETURN_RESULT(CURSOR_VENTAS);
END;
/

CREATE OR REPLACE PROCEDURE select_productos(data in varchar)
IS
cursor_productos SYS_REFCURSOR;
BEGIN
    OPEN cursor_productos FOR SELECT producto.id_producto , producto.nombre_producto , producto.existencia FROM producto where producto.existencia> 0 and UPPER(producto.nombre_producto) LIKE '%' || UPPER(data) || '%';
    dbms_sql.return_result(cursor_productos);
END;
/
CREATE OR REPLACE PROCEDURE UPDATE_PRECIO_VENTA (ID_PRODUCTO_F IN NUMBER)
IS
BEGIN
    UPDATE PRODUCTO SET PRECIO_VENTA=PRODUCTO.PRECIO_COMPRA+(PRODUCTO.PRECIO_COMPRA*0.37) WHERE ID_PRODUCTO=ID_PRODUCTO_F;
END;
/

CREATE OR REPLACE PROCEDURE UPDATE_PRECIO_COMPRA (ID_PRODUCTO_F IN INTEGER,PRECIO_COMPRA_N IN NUMBER)
IS
BEGIN
    UPDATE PRODUCTO SET PRECIO_COMPRA= PRECIO_COMPRA_N WHERE ID_PRODUCTO= ID_PRODUCTO_F;
END;
/

CREATE OR REPLACE PROCEDURE IMPUESTO_VENTAS (ID_FACTURA IN NUMBER)
AS
ISR_TOTAL NUMBER (12,2);
IVA_TOTAL NUMBER (12,2);
VALOR_TOTAL NUMBER (12,2);
BEGIN

SELECT SUM(DETV.TOTAL) AS TOTAL INTO VALOR_TOTAL
FROM FACTURA_VENTA FC, DETALLE_VENTA DETV
WHERE (FC.ID_VENTA = ID_FACTURA)AND (DETV.FACTURA_VENTA_ID_VENTA=ID_FACTURA)
HAVING(SUM(DETV.TOTAL)>0);

    IF VALOR_TOTAL < 30000.01 THEN
        ISR_TOTAL := (VALOR_TOTAL)*0.05;
        IVA_TOTAL := (VALOR_TOTAL)*0.12;
        INSERT INTO IMPUESTO_VENTA VALUES (NULL, ID_FACTURA, ISR_TOTAL, IVA_TOTAL);
    ELSE
            ISR_TOTAL := (VALOR_TOTAL-30000.00)*0.07;
            IVA_TOTAL := (VALOR_TOTAL)*0.12;
            INSERT INTO IMPUESTO_VENTA VALUES (NULL, ID_FACTURA, 1500.00+ISR_TOTAL, IVA_TOTAL);
    END IF;
END;
/

CREATE OR REPLACE PROCEDURE IMPUESTO_COMPRAS (ID_FACTURA IN NUMBER)
AS
ISR_TOTAL NUMBER (12,2);
IVA_TOTAL NUMBER (12,2);
VALOR_TOTAL NUMBER (12,2);
BEGIN

SELECT SUM(DETV.TOTAL) AS TOTAL INTO VALOR_TOTAL
FROM FACTURA_COMPRA FC, DETALLE_COMPRA DETV
WHERE (FC.ID_COMPRA = ID_FACTURA)AND (DETV.FACTURA_COMPRAS_ID_COMPRA=ID_FACTURA)
HAVING(SUM(DETV.TOTAL)>0);

    IF VALOR_TOTAL < 30000.01 THEN
        ISR_TOTAL := (VALOR_TOTAL)*0.05;
        IVA_TOTAL := (VALOR_TOTAL)*0.12;
        INSERT INTO IMPUESTO_COMPRA VALUES (NULL, ID_FACTURA, ISR_TOTAL, IVA_TOTAL);
    ELSE
            ISR_TOTAL := (VALOR_TOTAL-30000.00)*0.07;
            IVA_TOTAL := (VALOR_TOTAL)*0.12;
            INSERT INTO IMPUESTO_COMPRA VALUES (NULL, ID_FACTURA, 1500.00+ISR_TOTAL, IVA_TOTAL);
    END IF;
END;
/